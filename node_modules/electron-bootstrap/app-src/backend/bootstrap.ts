import * as SourceMapSupport from "source-map-support";
import * as PrettyError from "pretty-error";
import { app } from "electron";
import Window from "./window";

export default class Bootstrap
{
    private static window: Window;
    private static isBooted: boolean = false;

    public static init(): void
    {
        if (Bootstrap.isBooted === true) {
            throw new Error("Application is already booted.");
        }
        Bootstrap.overloadErrorStack();
        Bootstrap.initWindow();
        Bootstrap.attachAppEventHandlers();
        Bootstrap.isBooted = true;
    }

    private static overloadErrorStack(): void
    {
        SourceMapSupport.install();
        let prettyError: PrettyError = new PrettyError();
        prettyError.withoutColors();
        prettyError.skipNodeFiles();
        prettyError.skipPackage("electron");
        prettyError.start();
    }

    private static initWindow(): void
    {
        this.window = new Window();
    }

    private static attachAppEventHandlers(): void
    {
        app.on("ready", () => {
            this.window.init();
        });
        app.on("activate", () => {
            this.window.init();
        });
        app.on("window-all-closed", () => {
            if (process.platform !== "darwin") {
                app.quit()
            }
        });
    }
}